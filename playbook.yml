---

- name: Run the nusenu.relayor role and include custom vars
  remote_user: root
  gather_facts: yes
  hosts: '{{ target }}'
  vars_files:
    - vars/main.yml
  roles:
  #  - gantsign.zswap
    - nusenu.relayor

  pre_tasks:

 # - set_fact:
 #     ansible_python_interpreter: "/usr/bin/python3"

  # - name: Fetch Tor GPG key
  #   ansible.builtin.shell: wget -qO- https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | gpg --import
  #   args:
  #     executable: /bin/bash

  # - name: Import Tor GPG key
  #   ansible.builtin.shell: gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | apt-key add -
  #   args:
  #     executable: /bin/bash

  - name: Ensure unbound is installed
    apt:
      name: unbound
      state: present

  - name: Copy resolv.conf
    copy:
      src: files/resolv.conf
      dest: /etc/resolv.conf
      owner: root
      group: root
      mode: '0644'
      backup: yes

  - name: Set net.ipv4.tcp_fin_timeout to defined value
    sysctl:
      name: net.ipv4.tcp_fin_timeout
      value: 20
      sysctl_set: yes
      state: present
      reload: yes
    when: ansible_virtualization_type != 'lxc'

  - name: Set net.ipv4.tcp_keepalive_time to defined value
    sysctl:
      name: net.ipv4.tcp_keepalive_time
      value: 1200
      sysctl_set: yes
      state: present
      reload: yes
    when: ansible_virtualization_type != 'lxc'

  - name: Set net.ipv4.tcp_syncookies to defined value
    sysctl:
      name: net.ipv4.tcp_syncookies
      value: 1
      sysctl_set: yes
      state: present
      reload: yes
    when: ansible_virtualization_type != 'lxc'

  - name: Set net.ipv4.tcp_tw_reuse to defined value
    sysctl:
      name: net.ipv4.tcp_tw_reuse
      value: 1
      sysctl_set: yes
      state: present
      reload: yes
    when: ansible_virtualization_type != 'lxc'

  - name: Set net.ipv4.tcp_max_syn_backlog to defined value
    sysctl:
      name: net.ipv4.tcp_max_syn_backlog
      value: 8192
      sysctl_set: yes
      state: present
      reload: yes
    when: ansible_virtualization_type != 'lxc'

  - name: Set net.ipv4.tcp_max_tw_buckets to defined value
    sysctl:
      name: net.ipv4.tcp_max_tw_buckets
      value: 5000
      sysctl_set: yes
      state: present
      reload: yes
    when: ansible_virtualization_type != 'lxc'

  post_tasks:

  # - debug: 
  #   var: ansible_tailscale0.ipv4.address

  # - name: Enable MetricsPort in torrc
  #   lineinfile:
  #     dest: "{{ tor_ConfDir }}/{{ item.0.ipv4 }}_{{ item.1.orport }}/torrc"
  #     regexp: "{{ item.regexp }}"
  #     line: "{{ item.line }}"
  #     insertafter: EOF
  #     state: present
  #   with_items: "MetricsPort {{ raspi_boot_config_options }}:9035"